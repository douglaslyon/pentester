// minimum Eagle version required for this script
#require 4.1106





//
// gromero@felingeneering.com
//
//--------------------------------------------------------------------------------------

// generic parameters
string pad_shape = "ROUND";
string signal_name = "antenna";
real x_offset = 0.0; //mm
real y_offset = 0.0; //mm
real padding  = 10.0; //mm
int layer = 1;


// are we running the script from within the board editor? (i.e. not the library editor)
int in_board_editor;
string solderpoint; // PAD or VIA depending if it's library editting or board
int connector_orientation;
real extra_connector_wire_length;
string cmd = "";


//--------------------------------------------------------------------------------------

// decide whether we should use a via (board editor) or a pad (library editor)
if (board) board(B) { in_board_editor = 1; };
if (library) library(L) { in_board_editor = 0; };


if (in_board_editor) {
	solderpoint = "VIA";
} else {
	solderpoint = "PAD";
}

if (in_board_editor) {
	signal_name = "'"+signal_name+"' ";
} else {
	signal_name = "";
}	

//--------------------------------------------------------------------------------------

/* place a pad or via at a given location*/
void placePad(real x, real y) {
	string s;
	sprintf( s, "%s  (%4.2f %4.2f);\n", solderpoint , x+x_offset+padding , y+y_offset+padding);
	cmd += s;
}

// place a triangle on the board or library editor.
void placeTriangle(real x1, real y1, real x2, real y2, real x3, real y3) {
	string s;
	cmd += "Change orphans on;\n";
	sprintf( s, "POLYGON %s(%4.2f %4.2f) (%4.2f %4.2f) (%4.2f %4.2f) (%4.2f %4.2f);\n",
			signal_name,
			x1+x_offset+padding , y1+y_offset+padding,
			x2+x_offset+padding , y2+y_offset+padding,
			x3+x_offset+padding , y3+y_offset+padding,
			x1+x_offset+padding , y1+y_offset+padding);
	cmd += s;

}

// place a single segment of a wire between two points.
void placeWire(real x1, real y1, real x2, real y2) {
	string s;
	sprintf( s, "WIRE %s(%4.2f %4.2f) (%4.2f %4.2f);\n",
			signal_name,
			x1+x_offset+padding , y1+y_offset+padding,
			x2+x_offset+padding , y2+y_offset+padding);
	cmd += s;
}

// place a wire given all its nodes
void placeWireStrip(string elements) {
	string s;
	int i;

	sprintf( s, "WIRE %s",signal_name);
	cmd += s;
	cmd += elements;
	cmd += ";\n";
}

void placeCross(real x1, real y1, real x2, real y2) {
	real cx = (x1 + x2)*0.5;
	real cy = (y1 + y2)*0.5;
	placeWire(cx, y1, cx, y2);
	placeWire(x1, cy, x2, cy);
}


string buildPoint(real x, real y) {
	string s;
	sprintf(s, "(%4.2f %4.2f) ",x + x_offset+padding, y + y_offset+padding);
	return s;

}

// the origin of these is the 
void setOrigin(real x, real y) {
	x_offset = -padding-x;
	y_offset = -padding-y;
}

void setPadding(real p) {
	padding = p;
}


//-----------------------

// setup several things like wire width, via shape and size, and current layer
void initEagle(real trace_width, real pad_diameter, real pad_drill) {
	string s;
	sprintf( s, "GRID mil;\n");
	cmd += s;
	sprintf( s, "Change width %4.3f;\n", trace_width);
	cmd += s;
	sprintf( s, "GRID mm;\n");
	cmd += s;
	sprintf( s, "Change dia %4.2f;\n", pad_diameter);
	cmd += s;
	sprintf( s, "Change shape %s;\n", pad_shape);
	cmd += s;
	sprintf( s, "Change drill %4.2f;\n", pad_drill);
	cmd += s;
	sprintf( s, "Change layer %d;\n", layer);
	cmd += s;
	cmd += "Set WIRE_BEND 2;\n";
}

//-----------------------


// adds a connection (via/pad plus wire) to the  antenna
void addConnection(real x, real y, int orientation, real len, real push_len, real pad_diameter) {
	real dx, dy;
	real push  = pad_diameter * push_len / 2.0;

	switch(orientation) {
		case 0: dx = 0;  dy = -1; break;
		case 1: dx = 1;  dy = -1; break;
		case 2: dx = 1;  dy = 0; break;
		case 3: dx = 1;  dy = 1; break;
		case 4: dx = 0;  dy = 1; break;
		case 5: dx = -1; dy = 1; break;
		case 6: dx = -1; dy = 0; break;
		case 7: dx = -1; dy = -1; break;
	}

	placeWire(x - (dx * push), y - (dy * push), x + (dx * len), y + (dy * len));
	placePad(x + (dx * len), y + (dy * len));

}


// the w and h are the dimensions of the enclosed area. The border will be
// larger because of the padding (if > 0)
void addDimensions(real w, real h) {
	string s;

	if (in_board_editor) {
		sprintf( s, "Change layer 20;\n"); // Dimension
	} else {
		sprintf( s, "Change layer 51;\n"); // tDocu
	}
	cmd += s;

	// we add/subtract padding to have the outer coordinates
	placeWire( -padding, -padding, w+padding, -padding);
	placeWire(w+padding, -padding, w+padding,h+padding);
	placeWire(w+padding,h+padding,  -padding,h+padding);
	placeWire( -padding,h+padding,  -padding, -padding);

	sprintf( s, "Change layer %d;\n", layer);
	cmd += s;
}


